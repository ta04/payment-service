// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payment.proto

package com_ta04_srv_payment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Payment is a message for payment
type Payment struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              int32    `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Picture              string   `protobuf:"bytes,4,opt,name=picture,proto3" json:"picture,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_6362648dfa63d410, []int{0}
}

func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (m *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(m, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Payment) GetOrderId() int32 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Payment) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Payment) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *Payment) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// User is a message for user
type User struct {
	Id                     int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName              string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName               string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Username               string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password               string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	EmailAddress           string   `protobuf:"bytes,6,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	PhoneNumber            string   `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	DateOfBirth            string   `protobuf:"bytes,8,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Address                string   `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Role                   string   `protobuf:"bytes,10,opt,name=role,proto3" json:"role,omitempty"`
	CreditCardNumber       string   `protobuf:"bytes,11,opt,name=credit_card_number,json=creditCardNumber,proto3" json:"credit_card_number,omitempty"`
	CreditCardType         string   `protobuf:"bytes,12,opt,name=credit_card_type,json=creditCardType,proto3" json:"credit_card_type,omitempty"`
	CreditCardExpiredMonth string   `protobuf:"bytes,13,opt,name=credit_card_expired_month,json=creditCardExpiredMonth,proto3" json:"credit_card_expired_month,omitempty"`
	CreditCardExpiredYear  string   `protobuf:"bytes,14,opt,name=credit_card_expired_year,json=creditCardExpiredYear,proto3" json:"credit_card_expired_year,omitempty"`
	CreditCardCvv          string   `protobuf:"bytes,15,opt,name=credit_card_cvv,json=creditCardCvv,proto3" json:"credit_card_cvv,omitempty"`
	Status                 string   `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_6362648dfa63d410, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetDateOfBirth() string {
	if m != nil {
		return m.DateOfBirth
	}
	return ""
}

func (m *User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetCreditCardNumber() string {
	if m != nil {
		return m.CreditCardNumber
	}
	return ""
}

func (m *User) GetCreditCardType() string {
	if m != nil {
		return m.CreditCardType
	}
	return ""
}

func (m *User) GetCreditCardExpiredMonth() string {
	if m != nil {
		return m.CreditCardExpiredMonth
	}
	return ""
}

func (m *User) GetCreditCardExpiredYear() string {
	if m != nil {
		return m.CreditCardExpiredYear
	}
	return ""
}

func (m *User) GetCreditCardCvv() string {
	if m != nil {
		return m.CreditCardCvv
	}
	return ""
}

func (m *User) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// IndexPaymentRequest is a message for IndexPayments
type IndexPaymentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexPaymentsRequest) Reset()         { *m = IndexPaymentsRequest{} }
func (m *IndexPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*IndexPaymentsRequest) ProtoMessage()    {}
func (*IndexPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6362648dfa63d410, []int{2}
}

func (m *IndexPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexPaymentsRequest.Unmarshal(m, b)
}
func (m *IndexPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexPaymentsRequest.Marshal(b, m, deterministic)
}
func (m *IndexPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexPaymentsRequest.Merge(m, src)
}
func (m *IndexPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_IndexPaymentsRequest.Size(m)
}
func (m *IndexPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexPaymentsRequest proto.InternalMessageInfo

// Response is a response message
type Response struct {
	Payment              *Payment   `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Error                *Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Payments             []*Payment `protobuf:"bytes,3,rep,name=payments,proto3" json:"payments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_6362648dfa63d410, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetPayments() []*Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

// Error is an error message
type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_6362648dfa63d410, []int{4}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Payment)(nil), "com.ta04.srv.payment.Payment")
	proto.RegisterType((*User)(nil), "com.ta04.srv.payment.User")
	proto.RegisterType((*IndexPaymentsRequest)(nil), "com.ta04.srv.payment.IndexPaymentsRequest")
	proto.RegisterType((*Response)(nil), "com.ta04.srv.payment.Response")
	proto.RegisterType((*Error)(nil), "com.ta04.srv.payment.Error")
}

func init() {
	proto.RegisterFile("payment.proto", fileDescriptor_6362648dfa63d410)
}

var fileDescriptor_6362648dfa63d410 = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4f, 0x4f, 0xdb, 0x4e,
	0x10, 0xfd, 0x05, 0x12, 0x92, 0x4c, 0xe2, 0x80, 0x56, 0x80, 0x16, 0x10, 0x3f, 0xd1, 0x54, 0xaa,
	0x50, 0x55, 0x59, 0x2d, 0x6d, 0x85, 0x38, 0x96, 0x3f, 0x07, 0x0e, 0x05, 0x6a, 0xca, 0xa1, 0x87,
	0xca, 0x5a, 0xbc, 0x43, 0x63, 0x09, 0x7b, 0xdd, 0xdd, 0x8d, 0x21, 0xfd, 0x0c, 0xfd, 0x30, 0xed,
	0x37, 0xac, 0x76, 0x6c, 0x43, 0x10, 0x56, 0xcb, 0x21, 0xb7, 0x99, 0xf7, 0xde, 0xfc, 0xd1, 0xec,
	0xb3, 0xc1, 0xcb, 0xc4, 0x24, 0xc1, 0xd4, 0xfa, 0x99, 0x56, 0x56, 0xb1, 0xe5, 0x48, 0x25, 0xbe,
	0x15, 0xaf, 0xdf, 0xf9, 0x46, 0xe7, 0x7e, 0xc9, 0x0d, 0x7f, 0x40, 0xfb, 0xac, 0x08, 0xd9, 0x00,
	0xe6, 0x62, 0xc9, 0x1b, 0x5b, 0x8d, 0xed, 0x56, 0x30, 0x17, 0x4b, 0xb6, 0x06, 0x1d, 0xa5, 0x25,
	0xea, 0x30, 0x96, 0x7c, 0x8e, 0xd0, 0x36, 0xe5, 0xc7, 0x92, 0x31, 0x68, 0xda, 0x49, 0x86, 0x7c,
	0x7e, 0xab, 0xb1, 0xdd, 0x0d, 0x28, 0x66, 0x1c, 0xda, 0x59, 0x1c, 0xd9, 0xb1, 0x46, 0xde, 0x24,
	0xb8, 0x4a, 0xd9, 0x2a, 0x2c, 0x18, 0x2b, 0xec, 0xd8, 0xf0, 0x16, 0x11, 0x65, 0x36, 0xfc, 0xd5,
	0x84, 0xe6, 0x85, 0x41, 0xfd, 0x68, 0xf2, 0x26, 0xc0, 0x55, 0xac, 0x8d, 0x0d, 0x53, 0x91, 0x20,
	0xcd, 0xee, 0x06, 0x5d, 0x42, 0x4e, 0x44, 0x82, 0x6c, 0x03, 0xba, 0xd7, 0xa2, 0x62, 0x8b, 0x15,
	0x3a, 0x0e, 0x20, 0x72, 0x1d, 0x3a, 0x63, 0x83, 0x9a, 0xb8, 0x62, 0x8f, 0xbb, 0xdc, 0x71, 0x99,
	0x30, 0xe6, 0x46, 0x69, 0x59, 0xae, 0x72, 0x97, 0xb3, 0xe7, 0xe0, 0x61, 0x22, 0xe2, 0xeb, 0x50,
	0x48, 0xa9, 0xd1, 0x18, 0xbe, 0x40, 0x82, 0x3e, 0x81, 0x1f, 0x0a, 0x8c, 0x3d, 0x83, 0x7e, 0x36,
	0x52, 0x29, 0x86, 0xe9, 0x38, 0xb9, 0x44, 0xcd, 0xdb, 0xa4, 0xe9, 0x11, 0x76, 0x42, 0x10, 0x1b,
	0x82, 0x27, 0x85, 0xc5, 0x50, 0x5d, 0x85, 0x97, 0xb1, 0xb6, 0x23, 0xde, 0x29, 0x34, 0x0e, 0x3c,
	0xbd, 0xda, 0x77, 0x90, 0x3b, 0x55, 0x35, 0xa5, 0x5b, 0x9c, 0xaa, 0x4c, 0xdd, 0x61, 0xb5, 0xba,
	0x46, 0x0e, 0xc5, 0x61, 0x5d, 0xcc, 0x5e, 0x01, 0x8b, 0x34, 0xca, 0xd8, 0x86, 0x91, 0xd0, 0xb2,
	0x1a, 0xdd, 0x23, 0xc5, 0x52, 0xc1, 0x1c, 0x08, 0x2d, 0xcb, 0xf9, 0xdb, 0xb0, 0x34, 0xad, 0xa6,
	0x67, 0xea, 0x93, 0x76, 0x70, 0xaf, 0xfd, 0xec, 0x1e, 0x6c, 0x0f, 0xd6, 0xa6, 0x95, 0x78, 0x9b,
	0xc5, 0x1a, 0x65, 0x98, 0xa8, 0xd4, 0x8e, 0xb8, 0x47, 0x25, 0xab, 0xf7, 0x25, 0x47, 0x05, 0xfd,
	0xd1, 0xb1, 0x6c, 0x17, 0x78, 0x5d, 0xe9, 0x04, 0x85, 0xe6, 0x03, 0xaa, 0x5c, 0x79, 0x54, 0xf9,
	0x05, 0x85, 0x66, 0x2f, 0x60, 0x71, 0xba, 0x30, 0xca, 0x73, 0xbe, 0x48, 0x7a, 0xef, 0x5e, 0x7f,
	0x90, 0xe7, 0x53, 0x96, 0x59, 0x7a, 0x60, 0x99, 0x55, 0x58, 0x3e, 0x4e, 0x25, 0xde, 0x96, 0x9e,
	0x35, 0x01, 0x7e, 0x1f, 0xa3, 0xb1, 0xc3, 0xdf, 0x0d, 0xe8, 0x04, 0x68, 0x32, 0x95, 0x1a, 0x64,
	0xbb, 0xd0, 0x2e, 0xed, 0x4d, 0x9e, 0xea, 0xed, 0x6c, 0xfa, 0x75, 0xde, 0xf7, 0xcb, 0x26, 0x41,
	0xa5, 0x66, 0x6f, 0xa0, 0x85, 0x5a, 0x2b, 0x4d, 0x96, 0xeb, 0xed, 0x6c, 0xd4, 0x97, 0x1d, 0x39,
	0x49, 0x50, 0x28, 0xd9, 0x9e, 0xb3, 0x54, 0xb1, 0x0b, 0x9f, 0xdf, 0x9a, 0xff, 0xf7, 0xb0, 0x3b,
	0xf9, 0xf0, 0x3d, 0xb4, 0xa8, 0x95, 0x7b, 0xf4, 0x48, 0x49, 0xa4, 0x65, 0xbb, 0x01, 0xc5, 0xce,
	0x22, 0x09, 0x1a, 0x23, 0xbe, 0x55, 0xfe, 0xaf, 0xd2, 0x9d, 0x9f, 0x4d, 0x18, 0x94, 0xcd, 0xce,
	0x51, 0xe7, 0x71, 0x84, 0xec, 0x2b, 0x78, 0x0f, 0xae, 0xc2, 0x5e, 0xd6, 0xef, 0x50, 0x77, 0xba,
	0xf5, 0xff, 0xeb, 0xb5, 0xd5, 0x35, 0x87, 0xff, 0xb1, 0x0b, 0x58, 0x79, 0x50, 0xb9, 0x3f, 0x71,
	0x5f, 0xed, 0xf1, 0x21, 0x5b, 0xaf, 0x2f, 0x75, 0xec, 0x13, 0xda, 0x9e, 0x40, 0xef, 0x7c, 0xa4,
	0x6e, 0xaa, 0xdf, 0xcf, 0xdf, 0xef, 0xf6, 0x84, 0x7e, 0xa7, 0xd0, 0x3f, 0xb7, 0x4a, 0xe3, 0xcc,
	0x1a, 0x9e, 0x81, 0x77, 0x91, 0xb9, 0xef, 0x76, 0x66, 0x1d, 0x3f, 0xc1, 0xe0, 0x10, 0x8d, 0xd5,
	0x6a, 0x32, 0xab, 0x96, 0x97, 0x0b, 0xf4, 0x77, 0x7f, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0xd3,
	0x31, 0x94, 0x95, 0xee, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for PaymentService service

type PaymentServiceClient interface {
	// IndexPayments is a method to index all payments
	IndexPayments(ctx context.Context, in *IndexPaymentsRequest, opts ...client.CallOption) (*Response, error)
	// IndexPaymentsByUserID is a method to index all payments by the user's id
	IndexPaymentsByUserID(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	// ShowPayment is a method to show a payment
	ShowPayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error)
	// StorePayment is a method to store a new payment
	StorePayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error)
	// UpdatePayment is a method to update a payment
	UpdatePayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error)
	// DestroyPayment is a method to delete a payment
	DestroyPayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error)
}

type paymentServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPaymentServiceClient(serviceName string, c client.Client) PaymentServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.ta04.srv.payment"
	}
	return &paymentServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *paymentServiceClient) IndexPayments(ctx context.Context, in *IndexPaymentsRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.IndexPayments", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) IndexPaymentsByUserID(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.IndexPaymentsByUserID", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) ShowPayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.ShowPayment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) StorePayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.StorePayment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) UpdatePayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.UpdatePayment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) DestroyPayment(ctx context.Context, in *Payment, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.DestroyPayment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PaymentService service

type PaymentServiceHandler interface {
	// IndexPayments is a method to index all payments
	IndexPayments(context.Context, *IndexPaymentsRequest, *Response) error
	// IndexPaymentsByUserID is a method to index all payments by the user's id
	IndexPaymentsByUserID(context.Context, *User, *Response) error
	// ShowPayment is a method to show a payment
	ShowPayment(context.Context, *Payment, *Response) error
	// StorePayment is a method to store a new payment
	StorePayment(context.Context, *Payment, *Response) error
	// UpdatePayment is a method to update a payment
	UpdatePayment(context.Context, *Payment, *Response) error
	// DestroyPayment is a method to delete a payment
	DestroyPayment(context.Context, *Payment, *Response) error
}

func RegisterPaymentServiceHandler(s server.Server, hdlr PaymentServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PaymentService{hdlr}, opts...))
}

type PaymentService struct {
	PaymentServiceHandler
}

func (h *PaymentService) IndexPayments(ctx context.Context, in *IndexPaymentsRequest, out *Response) error {
	return h.PaymentServiceHandler.IndexPayments(ctx, in, out)
}

func (h *PaymentService) IndexPaymentsByUserID(ctx context.Context, in *User, out *Response) error {
	return h.PaymentServiceHandler.IndexPaymentsByUserID(ctx, in, out)
}

func (h *PaymentService) ShowPayment(ctx context.Context, in *Payment, out *Response) error {
	return h.PaymentServiceHandler.ShowPayment(ctx, in, out)
}

func (h *PaymentService) StorePayment(ctx context.Context, in *Payment, out *Response) error {
	return h.PaymentServiceHandler.StorePayment(ctx, in, out)
}

func (h *PaymentService) UpdatePayment(ctx context.Context, in *Payment, out *Response) error {
	return h.PaymentServiceHandler.UpdatePayment(ctx, in, out)
}

func (h *PaymentService) DestroyPayment(ctx context.Context, in *Payment, out *Response) error {
	return h.PaymentServiceHandler.DestroyPayment(ctx, in, out)
}
